{"version":3,"sources":["store/app-store.js","store/reducers/login-reducer.js","configs/axios-config.js","configs/axios-custom-instance.js","store/action-types.js","store/action-creators/login-actions.js","components/login-component.js","components/search-box-component.js","utilities/planet-utilities.js","components/planets-component.js","App.js","reportWebVitals.js","index.js"],"names":["reducers","combineReducers","loginReducer","state","loginBtnEnabledStatus","errMsg","userDetails","action","newState","type","status","message","details","store","createStore","applyMiddleware","logger","thunk","axiosConfiguration","baseUrl","swInstance","axios","create","baseURL","axiosConfig","actions","loginErrorMessageAction","LOGIN_ERROR","loginAction","props","username","password","dispatch","getState","swAxiosInstance","get","then","users","data","results","userFound","length","forEach","user","index","name","birth_year","SAVE_USER_DETAILS","sessionStorage","setItem","history","push","catch","error","TOGGLE_LOGIN_BTN_STATUS","Login","login","e","usernameField","value","passwordField","context","setState","errormsg","preventDefault","this","subscribe","loginPageerror","className","onSubmit","htmlFor","id","ref","input","React","Component","contextTypes","PropTypes","object","SearchBox","searchPlanets","storeData","timerSet","setTimer","timer","searchCount","search","target","errorMessage","searchThresholdInMilliSeconds","setTimeout","clearTimeout","placeholder","onKeyUp","hexCode","randomColor","hexColor","counter","Math","round","random","populationFormatConverter","population","milestones","format","i","floor","getPlanets","pageNo","Promise","resolve","reject","planetsDetails","Planets","searchTerm","searchKeyword","handleClick","removeItem","planets","maxPopulation","max","next","planet","parseInt","fetchPlanets","loggedInUser","getItem","searchedPlanets","filter","toLowerCase","startsWith","onClick","map","style","width","background","title","updatedPlanet","AppContainer","Route","exact","path","component","LoginComponent","PlanetsComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edab20f0.chunk.js","sourcesContent":["import { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { loginReducer } from './reducers/login-reducer.js';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nlet reducers = combineReducers({ loginReducer });\nlet store = createStore(\n  reducers,\n  applyMiddleware(logger, thunk)\n);\n\nexport default store;\n","export function loginReducer(state = {\n  loginBtnEnabledStatus: true,\n  errMsg: '',\n  userDetails: '',\n}, action) {\n  let newState = {};\n  switch (action.type) {\n    case 'TOGGLE_LOGIN_BTN_STATUS':\n      newState = { ...state, loginBtnEnabledStatus: action.status };\n      break;\n    case 'LOGIN_ERROR_MESSAGE':\n      newState = { ...state, errMsg: action.message };\n      break;\n    case 'LOGGEDIN_USER_DETAILS_SAVE':\n      newState = { ...state, userDetails: action.details };\n      break;\n    default:\n      newState = state;\n  }\n\n  return newState;\n};\n","const axiosConfiguration = {\n  baseUrl: 'https://swapi.dev/api/'\n};\n\nexport default axiosConfiguration;\n","import axios from 'axios';\nimport axiosConfig from './axios-config';\n\nlet swInstance = axios.create({\n  baseURL: axiosConfig.baseUrl\n});\n\nexport default swInstance;\n","const actions = {\n  'TOGGLE_LOGIN_BTN_STATUS': 'TOGGLE_LOGIN_BTN_STATUS',\n  'LOGIN_ERROR': 'LOGIN_ERROR_MESSAGE',\n  'SAVE_USER_DETAILS': 'LOGGEDIN_USER_DETAILS_SAVE',\n}\n\nexport default actions;\n","import swAxiosInstance from '../../configs/axios-custom-instance';\nimport actions from '../action-types.js';\n\nexport function toggleLoginBtnStatus(status) {\n  return {\n    type: actions.TOGGLE_LOGIN_BTN_STATUS,\n    status,\n  }\n}\n\nexport function loginErrorMessageAction(message) {\n  return {\n    type: actions.LOGIN_ERROR,\n    message,\n  }\n}\n\nexport function loggedInUserDetailsSave(details) {\n  return {\n    type: actions.SAVE_USER_DETAILS,\n    details,\n  }\n}\n\nexport function loginAction(props, username, password) {\n  return (dispatch, getState) => {\n    swAxiosInstance.get('people/?search=' + username)\n      .then(function (userDetails) {\n        let users = userDetails.data.results, userFound = false;\n        if (users.length === 0) {\n          dispatch(loginErrorMessageAction(\"No user found with the name of \" + username));\n        } else {\n          users.forEach((user, index) => {\n            if (user.name === username &&  user.birth_year === password) {\n              dispatch(loggedInUserDetailsSave(user));\n              sessionStorage.setItem(\"loggedinUser\", user.name);\n              props.history.push('/planets');\n              userFound = true;\n            }\n          });\n          if (!userFound) {\n            dispatch(loginErrorMessageAction(\"Please check your username or password\"));\n          }\n        }\n        // dispatch(toggleLoginBtnStatus(true));\n      })\n      .catch(function (error) {\n        dispatch(loginErrorMessageAction(error));\n        dispatch(toggleLoginBtnStatus(true));\n      });\n    };\n}\n","import React from 'react';\nimport {loginAction} from '../store/action-creators/login-actions';\nimport PropTypes from 'prop-types';\nimport '../css/style.css';\n\nexport default class Login extends React.Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        errormsg:''\n    }\n  }\n\n  login = (e) => {\n    let username = this.usernameField.value,\n        password = this.passwordField.value,\n        props = this.props,\n        { store } = this.context;\n        if(username === '' || password === ''){\n          this.setState({errormsg:'username or password cannot be empty'});\n          e.preventDefault();\n        } else{\n          this.setState({errormsg:''});\n          store.dispatch(loginAction(props, username, password));\n          e.preventDefault();\n        }\n  }\n\n  render() {\n    let { store } = this.context;\n    var storeData;\n    store.subscribe(() => {\n      storeData = store.getState();\n      let loginPageerror = storeData.loginReducer.errMsg;\n      this.setState({errormsg:loginPageerror});\n    });\n\n    return (\n      <div className=\"col-md-12 col-sm-12 no-padding\">\n        <div className=\"header-container\">\n          <p className=\"header\">Welcome to world of Star Wars </p>\n\n          <div className=\"login-box\">\n          <form onSubmit={this.login}>\n            <label htmlFor=\"username-login\">\n              Username\n            </label>\n            <input\n              type=\"text\"\n              id=\"username-login\"\n              ref={ (input) => { this.usernameField = input } }\n            />\n            <label htmlFor=\"password-login\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password-login\"\n              ref={ (input) => { this.passwordField = input } }\n            />\n            <p className=\"error\">\n              { this.state.errormsg }\n            </p>\n            <button>Login </button>\n            <div className=\"clearfix\" />\n          </form>\n        </div>\n        </div>\n      \n      </div>\n    );\n  }\n}\n\nLogin.contextTypes = { store: PropTypes.object };","import React from 'react';\nimport '../css/style.css';\nimport PropTypes from 'prop-types';\n\nexport default class SearchBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timerSet: false,\n      searchCount: 0,\n      errorMessage: '',\n      searchThresholdInMilliSeconds: 60000,\n    }\n  }\n\n  setTimer() {\n    this.timer = setTimeout(() => {\n      clearTimeout(this.timer);\n      this.setState({\n        searchCount: 0,\n        errorMessage: '',\n        timerSet: false,\n      });\n    }, this.state.searchThresholdInMilliSeconds);\n  }\n\n  searchPlanets = (e) => {\n\n    let { store } = this.context, storeData = store.getState();\n    if (this.state.timerSet === false) {\n      this.setState({...this.state,timerSet:true});\n      this.setTimer();\n    }\n\n    if (storeData.loginReducer.userDetails.name !== \"Luke Skywalker\") {\n      if ( this.timer && this.state.searchCount <= 15 ) {\n        this.props.search(e.target.value);\n        this.setState({...this.state,searchCount: this.state.searchCount+1});\n      }\n\n      if (this.state.searchCount === 16) {\n        this.props.search('');\n        this.setState({...this.state,errorMessage: 'You are not allowed to perform more than 15 searches per minute',searchCount: this.state.searchCount+1 });\n      }\n    } else {\n      this.props.search(e.target.value);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          className=\"col-md-12 col-sm-12 search-box\"\n          placeholder=\"Search planets\"\n          onKeyUp={this.searchPlanets}\n        />\n        {\n          this.state.errorMessage ?  <p className=\"error\">{ this.state.errorMessage }</p> : null\n        }\n       \n      </div>\n    )\n  }\n}\n\n\nSearchBox.contextTypes = { store: PropTypes.object };\n","import swAxiosInstance from '../configs/axios-custom-instance';\n\nlet hexCode = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\nexport function randomColor() {\n  let hexColor = '#', counter = 0;\n  for (; counter < 6 ; counter++) {\n    hexColor += hexCode[Math.round(Math.random()*15)];\n  }\n\n  return hexColor;\n}\n\nexport function populationFormatConverter(population) {\n  let milestones = [\n    { value: 1000, format: 'K' },\n    { value: 1000000, format: 'M' },\n    { value: 1000000000, format: 'B' }\n  ], i = milestones.length - 1, display = '';\n  for (; i >= 0; i--) {\n    if ((population / milestones[i].value) >= 1) {\n      display = (\n        (\n          Math.floor(population / milestones[i].value)\n          + '.'\n          + Math.floor((population % milestones[i].value) / (milestones[i].value / 10))\n        )\n        + milestones[i].format\n      );\n      return display;\n    }\n  }\n\n  return population;\n}\n\nexport function getPlanets(pageNo) {\n  return new Promise(function (resolve, reject) {\n    swAxiosInstance.get('/planets/?page=' + pageNo)\n    .then((planetsDetails) => {\n      resolve(planetsDetails);\n    })\n    .catch((error) => {\n      reject(error);\n    });\n  });\n}\n","import React from 'react';\nimport SearchBox from './search-box-component';\nimport '../css/style.css';\nimport PropTypes from 'prop-types';\n\nimport {\n  randomColor,\n  populationFormatConverter,\n  getPlanets\n} from '../utilities/planet-utilities.js';\n\nclass Planets extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      planets: [],\n      maxPopulation: 0,\n      searchKeyword: '',\n    }\n  }\n\n  search = (searchTerm) => {\n    this.setState({ searchKeyword: searchTerm });\n  }\n\n  async fetchPlanets() {\n    let max = 0, pageNo = 1;\n    let results = await getPlanets(pageNo);\n\n    while (results && results.data && results.data.next != null) {\n      this.setState({ ...this.state, planets: [...this.state.planets, ...results.data.results] });\n      results = await getPlanets(++pageNo);\n    }\n\n    this.state.planets.forEach(function (planet) {\n      if (planet.population !== \"unknown\") {\n        if (parseInt(planet.population, 10) > max) {\n          max = parseInt(planet.population, 10);\n        }\n      }\n    });\n    this.setState({ ...this.state, maxPopulation: max });\n  }\n\n  componentDidMount() {\n    this.fetchPlanets();\n  }\n\n  handleClick = () => {\n    this.props.history.push('/');\n    sessionStorage.removeItem('loggedinUser')\n  }\n\n  render() {\n    let state = this.state;\n    var loggedInUser= '';\n    if(sessionStorage.getItem(\"loggedinUser\")){\n      loggedInUser = sessionStorage.getItem(\"loggedinUser\");   \n    } else{\n      this.props.history.push('/');\n    }\n\n    let searchedPlanets = this.state.planets.filter(function (planet) {\n      if (planet.name.toLowerCase().startsWith(state.searchKeyword.toLowerCase())) {\n        return planet\n      }\n    });\n\n    return (\n      <div className=\"col-md-12 col-sm-12 no-padding planets-component\">\n        <p className=\"header center\">Explore the world of Star Wars</p>\n        <div className=\"planet-header\">\n          <div>\n            <SearchBox search={this.search} />\n            {\n              searchedPlanets.length === 0 ? (<p className=\"error\">No Planets Found</p>) : null\n            }\n          </div>\n          <div className=\"loggedin-user\">\n            Logged In - {loggedInUser}\n            <p className=\"align-right\">\n              <button className=\"log-off\" onClick={()=>this.handleClick()}>Log Out</button>\n            </p>\n          </div>\n        </div>\n\n        <div className=\"col-md-12 col-sm-12 planets-container\">\n          {\n            searchedPlanets.map(function (planet, index) {\n              return (\n                <div\n                  style={{\n                    width: planet.population === 'unknown' ? 100 : 100 + (350 * (parseInt(planet.population, 10) / state.maxPopulation)) + 'px',\n                    background: randomColor(),\n                  }}\n                  className=\"planets\"\n                  title={'Planet Name: ' + planet.name + '; Planet Population: ' + planet.population}\n                  key={index}\n                >\n                  <span className=\"planet-name\">\n                    {planet.name}\n                  </span>\n                  <span className=\"planet-population\">\n                    {populationFormatConverter(planet.population)}\n                  </span>\n                </div>\n              );\n\n            }).filter(function (updatedPlanet) {\n              if (updatedPlanet !== null) {\n                return true;\n              }\n\n              return false;\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nPlanets.contextTypes = { store: PropTypes.object };\n\nexport default Planets;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  HashRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from '../src/store/app-store';\nimport LoginComponent from '../src/components/login-component.js';\nimport PlanetsComponent from '../src/components/planets-component';\n\nexport default class AppContainer extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={LoginComponent} />\n            <Route path=\"/planets\" component={PlanetsComponent} />\n          </div>\n        </Router>\n        </Provider>\n    )\n  }\n}\n\nAppContainer.contextTypes = { store: PropTypes.object };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}